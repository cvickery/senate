<?php
  print ("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
 ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head><title>TechLib Logo Contest!</title>
<link href="photos.css" rel="stylesheet" type="text/css" />

<script type="text/javascript" src="photos.js"></script>
<script type="text/javascript">

//  initialize()
//  ------------------------------------------------------------------
/*
 *    Display 0-4 alert boxes, generated by php, depending on how many
 *    missing images files are detected.  This function will be empty
 *    unless the image file subdirectories are missing matching files
 *    and/or the image_list file contains bad file names.
 */
  function initialize()
  {
<?php
  //  Generate lists of thumbs and images
  //  --------------------------------------------------------------
  /*  If image_list is present, it contains a list of image files in
   *  the sequence they are to be displayed.  If image_list is not
   *  present, use the contents of the thumbs directory to generate
   *  the list.
   */
  $num_images       = 0;
  $missing_images   = 0;
  $missing_smaller  = 0;
  $missing_thumbs   = 0;
  $file_names       = array();
  $image_files      = array();
  $smaller_files    = array();
  $thumb_files      = array();
  if (is_readable( "image_list" ) )
  {
    $raw_file_names = file( "image_list" );
    foreach ( $raw_file_names as $raw )
    {
      //  Ignore lines that aren't image file names
      $raw = trim( $raw );
      if ( preg_match( "/\.jpe?g$/i", $raw ) )
      {
        $file_names[] = $raw;
      }
    }
  }
  else
  {  
    $dir = opendir( "thumbs" );
    while ( $file = readdir( $dir ) )
    {
      //  Accept only jpeg images (.jpg .jpeg .JPG .JPEG)
      if ( preg_match( "/\.jpe?g$/i", $file ) )
      {
        $file_names[] = $file;
      }
    }
    closedir( $dir );
  }

  //  Populate image_files[], smaller_files[], and thumb_files[]
  //  only if all files in the set are readable.

  foreach ( $file_names as $fn )
  {
    $thumb_file   = "./thumbs/".$fn;
    $image_file   = "./images/".$fn;
    $smaller_file = "./images-smaller/".$fn;
    if (is_readable($thumb_file) )
    {
      if ( is_readable($image_file) )
      {
        if ( is_readable($smaller_file) )
        {
          $thumb_files[] = $thumb_file;
          $image_files[] = $image_file;
          $smaller_files[] = $smaller_file;
          $num_images++;
        }
        else
        {
          $missing_smaller++;
        }
      }
      else
      {
        $missing_images++;
      }
    }
    else
    {
      $missing_thumbs++;
    }
  }
  $last_image = $num_images - 1;

  if ( $missing_images > 0 )
  {
    printf (
  "alert (\"$missing_images missing or unreadable image%s\");",
                                ($missing_images == 1) ? "!" :"s!");
  }
  if ( $missing_smaller > 0 )
  {
    printf(
  "alert (\"$missing_smaller missing or unreadable smaller image%s\");",
                               ($missing_smaller == 1) ? "!" :"s!");
  }
  if ( $missing_thumbs > 0 )
  {
    printf(
  "alert (\"$missing_thumbs missing or unreadable thumb%s\");",
                                ($missing_thumbs == 1) ? "!" :"s!");
  }
  if ( $num_images == 0 )
  {
    printf(
  "alert (\"Tell Chris: There are no pictures to show!\");" );
  }
?>
    initialized = true;
    return;
  }


//  Array of higher resolution image URLS generated by php
//  ---------------------------------------------------------------
  var imageURLs     = new Array( <?php
  //  Populate the JavaScript array of image file names
  for ( $i = 0; $i < $num_images; $i++ )
  {
    print "\"$image_files[$i]\"";
    if ( $i != ($num_images - 1) ) print ",";
    print ( (($i % 4) == 0) ? "\n    " : " " );
  }
  ?>
  );

//  Array of lower resolution image URLs generated by php
//  ---------------------------------------------------------------
  var smallerURLs     = new Array( <?php
  //  Populate the JavaScript array of smaller image file names
  for ( $i = 0; $i < $num_images; $i++ )
  {
    print "\"$smaller_files[$i]\"";
    if ( $i != ($num_images - 1) ) print ",";
    print ( (($i % 3) == 0) ? "\n    " : " " );
  }
  ?>
  );
</script>

</head>

<body onload="showFirst()" >

<div id="header">
  <table>
    <tr>
      <!-- Alt text is directory name if header.jpg is missing -->
      <td><h1><?php print basename(trim(`pwd`));?></h1></td>
    </tr>
  </table>
</div>
<div>
<table>
  <tr>
    <td id="prev" valign="top">
      <button onclick="showPrev()">Previous</button><br />
      <button onclick="showFirst()">First</button><br />
      <button onclick="smallerfy()">Smaller</button>
    </td>
    <td id="image" align="center" valign="middle">
        Loading thumbnails ...</td>
    <td id="next" valign="top">
      <button onclick="showNext()">Next</button><br />
      <button onclick="showLast()">Last</button><br />
      <button onclick="biggerfy()">Bigger</button><br />
      <button onclick="toggleResolution()" id="resolution">
        Use High Resolution (Slower Download)
      </button>
    </td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td class= "title" id="title"></td>
  </tr>
</table>
</div>

<div>
<?php
    //  Generate buttons for the thumbs.  Set each one to invoke
    //  the showImage() function with the index of the image.
    for ( $i = 0; $i < $num_images; $i++ )
    {
      print  ("  <button onclick=\"showImage($i)\"> ");
      print  ("<img class=\"thumb\" src=\"$thumb_files[$i]\" ");
      print  ("alt=\"$image_files[$i]\" /> </button>\n");
    }
  ?>
</div>

<hr />
<p class="footer">
  Validate:
  <a
  href="http://validator.w3.org/check/referer"><strong>XHTML</strong></a>
  &nbsp;
  <a
  href="http://jigsaw.w3.org/css-validator/check/referer"><strong>CSS</strong></a>

</p>
</body></html>

